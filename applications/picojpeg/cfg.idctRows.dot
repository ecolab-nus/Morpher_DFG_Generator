digraph "CFG for 'idctRows' function" {
	label="CFG for 'idctRows' function";

	Node0x55c0d22c7bc0 [shape=record,label="{entry:\l  br label %for.body\l}"];
	Node0x55c0d22c7bc0 -> Node0x55c0d22a1f80;
	Node0x55c0d22a1f80 [shape=record,label="{for.body:                                         \l  %i.0287 = phi i8 [ 0, %entry ], [ %inc, %if.end ]\l  %pSrc.0285 = phi i16* [ getelementptr inbounds ([64 x i16], [64 x i16]*\l... @gCoeffBuf, i32 0, i32 0), %entry ], [ %add.ptr164, %if.end ]\l  %call = tail call i32 bitcast (i32 (...)* @please_map_me to i32 ()*)() #6\l  %arrayidx = getelementptr inbounds i16, i16* %pSrc.0285, i32 1\l  %manupa0 = load i16, i16* %arrayidx, align 2, !tbaa !3\l  %arrayidx3 = getelementptr inbounds i16, i16* %pSrc.0285, i32 2\l  %manupa1 = load i16, i16* %arrayidx3, align 2, !tbaa !3\l  %or263 = or i16 %manupa1, %manupa0\l  %arrayidx5 = getelementptr inbounds i16, i16* %pSrc.0285, i32 3\l  %manupa2 = load i16, i16* %arrayidx5, align 2, !tbaa !3\l  %or7264 = or i16 %or263, %manupa2\l  %arrayidx8 = getelementptr inbounds i16, i16* %pSrc.0285, i32 4\l  %manupa3 = load i16, i16* %arrayidx8, align 2, !tbaa !3\l  %or10265 = or i16 %or7264, %manupa3\l  %arrayidx11 = getelementptr inbounds i16, i16* %pSrc.0285, i32 5\l  %manupa4 = load i16, i16* %arrayidx11, align 2, !tbaa !3\l  %or13266 = or i16 %or10265, %manupa4\l  %arrayidx14 = getelementptr inbounds i16, i16* %pSrc.0285, i32 6\l  %manupa5 = load i16, i16* %arrayidx14, align 2, !tbaa !3\l  %or16267 = or i16 %or13266, %manupa5\l  %arrayidx17 = getelementptr inbounds i16, i16* %pSrc.0285, i32 7\l  %manupa6 = load i16, i16* %arrayidx17, align 2, !tbaa !3\l  %or19268 = or i16 %or16267, %manupa6\l  %cmp20 = icmp eq i16 %or19268, 0\l  br i1 %cmp20, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x55c0d22a1f80:s0 -> Node0x55c0d22a1fd0;
	Node0x55c0d22a1f80:s1 -> Node0x55c0d22a2020;
	Node0x55c0d22a1fd0 [shape=record,label="{if.then:                                          \l  %manupa7 = load i16, i16* %pSrc.0285, align 2, !tbaa !3\l  store i16 %manupa7, i16* %arrayidx, align 2, !tbaa !3\l  store i16 %manupa7, i16* %arrayidx3, align 2, !tbaa !3\l  store i16 %manupa7, i16* %arrayidx5, align 2, !tbaa !3\l  store i16 %manupa7, i16* %arrayidx8, align 2, !tbaa !3\l  store i16 %manupa7, i16* %arrayidx11, align 2, !tbaa !3\l  store i16 %manupa7, i16* %arrayidx14, align 2, !tbaa !3\l  br label %if.end\l}"];
	Node0x55c0d22a1fd0 -> Node0x55c0d22a2070;
	Node0x55c0d22a2020 [shape=record,label="{if.else:                                          \l  %sub = sub i16 %manupa4, %manupa2\l  %add = add i16 %manupa4, %manupa2\l  %add40 = add i16 %manupa6, %manupa0\l  %sub44 = sub i16 %manupa0, %manupa6\l  %sub48 = sub i16 %sub, %sub44\l  %conv.i = sext i16 %sub48 to i32\l  %mul.i = mul nsw i32 %conv.i, 196\l  %add.i = add nsw i32 %mul.i, 128\l  %manupa8 = lshr i32 %add.i, 8\l  %conv1.i = trunc i32 %manupa8 to i16\l  %conv.i281 = sext i16 %sub44 to i32\l  %mul.i282 = mul nsw i32 %conv.i281, 277\l  %add.i283 = add nsw i32 %mul.i282, 128\l  %manupa9 = lshr i32 %add.i283, 8\l  %conv1.i284 = trunc i32 %manupa9 to i16\l  %sub54 = sub i16 %conv1.i284, %conv1.i\l  %conv.i277 = sext i16 %sub to i32\l  %mul.i278 = mul nsw i32 %conv.i277, 669\l  %add.i279 = add nsw i32 %mul.i278, 128\l  %manupa10 = lshr i32 %add.i279, 8\l  %conv1.i280 = trunc i32 %manupa10 to i16\l  %sub59 = sub i16 %conv1.i, %conv1.i280\l  %sub63 = sub i16 %add40, %add\l  %add67 = add i16 %add40, %add\l  %sub71 = sub i16 %sub54, %add67\l  %conv.i273 = sext i16 %sub63 to i32\l  %mul.i274 = mul nsw i32 %conv.i273, 362\l  %add.i275 = add nsw i32 %mul.i274, 128\l  %manupa11 = lshr i32 %add.i275, 8\l  %conv1.i276 = trunc i32 %manupa11 to i16\l  %sub76 = sub i16 %conv1.i276, %sub71\l  %add80 = add i16 %sub76, %sub59\l  %manupa12 = load i16, i16* %pSrc.0285, align 2, !tbaa !3\l  %add87 = add i16 %manupa12, %manupa3\l  %sub91 = sub i16 %manupa12, %manupa3\l  %sub97 = sub i16 %manupa1, %manupa5\l  %add101 = add i16 %manupa5, %manupa1\l  %conv.i269 = sext i16 %sub97 to i32\l  %mul.i270 = mul nsw i32 %conv.i269, 362\l  %add.i271 = add nsw i32 %mul.i270, 128\l  %manupa13 = lshr i32 %add.i271, 8\l  %conv1.i272 = trunc i32 %manupa13 to i16\l  %sub106 = sub i16 %conv1.i272, %add101\l  %add110 = add i16 %add87, %add101\l  %sub114 = sub i16 %add87, %add101\l  %add118 = add i16 %sub91, %sub106\l  %sub122 = sub i16 %sub91, %sub106\l  %add126 = add i16 %add110, %add67\l  store i16 %add126, i16* %pSrc.0285, align 2, !tbaa !3\l  %add131 = add i16 %add118, %sub71\l  store i16 %add131, i16* %arrayidx, align 2, !tbaa !3\l  %add136 = add i16 %sub122, %sub76\l  store i16 %add136, i16* %arrayidx3, align 2, !tbaa !3\l  %sub141 = sub i16 %sub114, %add80\l  store i16 %sub141, i16* %arrayidx5, align 2, !tbaa !3\l  %add146 = add i16 %sub114, %add80\l  store i16 %add146, i16* %arrayidx8, align 2, !tbaa !3\l  %sub151 = sub i16 %sub122, %sub76\l  store i16 %sub151, i16* %arrayidx11, align 2, !tbaa !3\l  %sub156 = sub i16 %add118, %sub71\l  store i16 %sub156, i16* %arrayidx14, align 2, !tbaa !3\l  %sub161 = sub i16 %add110, %add67\l  br label %if.end\l}"];
	Node0x55c0d22a2020 -> Node0x55c0d22a2070;
	Node0x55c0d22a2070 [shape=record,label="{if.end:                                           \l  %storemerge = phi i16 [ %sub161, %if.else ], [ %manupa7, %if.then ]\l  store i16 %storemerge, i16* %arrayidx17, align 2, !tbaa !3\l  %add.ptr164 = getelementptr inbounds i16, i16* %pSrc.0285, i32 8\l  %inc = add nuw nsw i8 %i.0287, 1\l  %exitcond = icmp eq i8 %inc, 8\l  br i1 %exitcond, label %for.end, label %for.body\l|{<s0>T|<s1>F}}"];
	Node0x55c0d22a2070:s0 -> Node0x55c0d22a20c0;
	Node0x55c0d22a2070:s1 -> Node0x55c0d22a1f80;
	Node0x55c0d22a20c0 [shape=record,label="{for.end:                                          \l  ret void\l}"];
}
