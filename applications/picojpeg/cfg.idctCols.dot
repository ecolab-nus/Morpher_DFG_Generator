digraph "CFG for 'idctCols' function" {
	label="CFG for 'idctCols' function";

	Node0x560dd15e7090 [shape=record,label="{entry:\l  br label %for.body\l}"];
	Node0x560dd15e7090 -> Node0x560dd15e8380;
	Node0x560dd15e8380 [shape=record,label="{for.body:                                         \l  %i.0405 = phi i8 [ 0, %entry ], [ %inc, %if.end ]\l  %pSrc.0403 = phi i16* [ getelementptr inbounds ([64 x i16], [64 x i16]*\l... @gCoeffBuf, i32 0, i32 0), %entry ], [ %incdec.ptr, %if.end ]\l  %call = tail call i32 bitcast (i32 (...)* @please_map_me to i32 ()*)() #6\l  %arrayidx = getelementptr inbounds i16, i16* %pSrc.0403, i32 8\l  %manupa0 = load i16, i16* %arrayidx, align 2, !tbaa !3\l  %arrayidx3 = getelementptr inbounds i16, i16* %pSrc.0403, i32 16\l  %manupa1 = load i16, i16* %arrayidx3, align 2, !tbaa !3\l  %or316 = or i16 %manupa1, %manupa0\l  %arrayidx5 = getelementptr inbounds i16, i16* %pSrc.0403, i32 24\l  %manupa2 = load i16, i16* %arrayidx5, align 2, !tbaa !3\l  %or7317 = or i16 %or316, %manupa2\l  %arrayidx8 = getelementptr inbounds i16, i16* %pSrc.0403, i32 32\l  %manupa3 = load i16, i16* %arrayidx8, align 2, !tbaa !3\l  %or10318 = or i16 %or7317, %manupa3\l  %arrayidx11 = getelementptr inbounds i16, i16* %pSrc.0403, i32 40\l  %manupa4 = load i16, i16* %arrayidx11, align 2, !tbaa !3\l  %or13319 = or i16 %or10318, %manupa4\l  %arrayidx14 = getelementptr inbounds i16, i16* %pSrc.0403, i32 48\l  %manupa5 = load i16, i16* %arrayidx14, align 2, !tbaa !3\l  %or16320 = or i16 %or13319, %manupa5\l  %arrayidx17 = getelementptr inbounds i16, i16* %pSrc.0403, i32 56\l  %manupa6 = load i16, i16* %arrayidx17, align 2, !tbaa !3\l  %or19321 = or i16 %or16320, %manupa6\l  %cmp20 = icmp eq i16 %or19321, 0\l  br i1 %cmp20, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x560dd15e8380:s0 -> Node0x560dd15e83d0;
	Node0x560dd15e8380:s1 -> Node0x560dd15e8420;
	Node0x560dd15e83d0 [shape=record,label="{if.then:                                          \l  %manupa7 = load i16, i16* %pSrc.0403, align 2, !tbaa !3\l  %conv22 = sext i16 %manupa7 to i32\l  %add = add nsw i32 %conv22, 64\l  %shr = lshr i32 %add, 7\l  %manupa8 = trunc i32 %shr to i16\l  %conv24 = add i16 %manupa8, 128\l  %cmp.i = icmp ugt i16 %conv24, 255\l  %s.lobit.i = ashr i16 %conv24, 15\l  %.not.i = xor i16 %s.lobit.i, 255\l  %call25322 = select i1 %cmp.i, i16 %.not.i, i16 %conv24\l  %conv26 = and i16 %call25322, 255\l  store i16 %conv26, i16* %pSrc.0403, align 2, !tbaa !3\l  store i16 %conv26, i16* %arrayidx, align 2, !tbaa !3\l  store i16 %conv26, i16* %arrayidx3, align 2, !tbaa !3\l  store i16 %conv26, i16* %arrayidx5, align 2, !tbaa !3\l  store i16 %conv26, i16* %arrayidx8, align 2, !tbaa !3\l  store i16 %conv26, i16* %arrayidx11, align 2, !tbaa !3\l  store i16 %conv26, i16* %arrayidx14, align 2, !tbaa !3\l  br label %if.end\l}"];
	Node0x560dd15e83d0 -> Node0x560dd15e8470;
	Node0x560dd15e8420 [shape=record,label="{if.else:                                          \l  %sub = sub i16 %manupa4, %manupa2\l  %add48 = add i16 %manupa4, %manupa2\l  %add54 = add i16 %manupa6, %manupa0\l  %sub58 = sub i16 %manupa0, %manupa6\l  %sub62 = sub i16 %sub, %sub58\l  %conv.i399 = sext i16 %sub62 to i32\l  %mul.i400 = mul nsw i32 %conv.i399, 196\l  %add.i401 = add nsw i32 %mul.i400, 128\l  %manupa9 = lshr i32 %add.i401, 8\l  %conv1.i402 = trunc i32 %manupa9 to i16\l  %conv.i395 = sext i16 %sub58 to i32\l  %mul.i396 = mul nsw i32 %conv.i395, 277\l  %add.i397 = add nsw i32 %mul.i396, 128\l  %manupa10 = lshr i32 %add.i397, 8\l  %conv1.i398 = trunc i32 %manupa10 to i16\l  %sub68 = sub i16 %conv1.i398, %conv1.i402\l  %conv.i391 = sext i16 %sub to i32\l  %mul.i392 = mul nsw i32 %conv.i391, 669\l  %add.i393 = add nsw i32 %mul.i392, 128\l  %manupa11 = lshr i32 %add.i393, 8\l  %conv1.i394 = trunc i32 %manupa11 to i16\l  %sub73 = sub i16 %conv1.i402, %conv1.i394\l  %sub77 = sub i16 %add54, %add48\l  %add81 = add i16 %add54, %add48\l  %conv84 = sext i16 %add81 to i32\l  %sub85 = sub i16 %sub68, %add81\l  %conv.i387 = sext i16 %sub77 to i32\l  %mul.i388 = mul nsw i32 %conv.i387, 362\l  %add.i389 = add nsw i32 %mul.i388, 128\l  %manupa12 = lshr i32 %add.i389, 8\l  %conv1.i390 = trunc i32 %manupa12 to i16\l  %conv89 = sext i16 %sub85 to i32\l  %sub90 = sub i16 %conv1.i390, %sub85\l  %conv92 = sext i16 %sub90 to i32\l  %add94 = add i16 %sub73, %sub90\l  %manupa13 = load i16, i16* %pSrc.0403, align 2, !tbaa !3\l  %add100 = add i16 %manupa13, %manupa3\l  %sub104 = sub i16 %manupa13, %manupa3\l  %sub110 = sub i16 %manupa1, %manupa5\l  %add114 = add i16 %manupa5, %manupa1\l  %conv.i = sext i16 %sub110 to i32\l  %mul.i = mul nsw i32 %conv.i, 362\l  %add.i = add nsw i32 %mul.i, 128\l  %manupa14 = lshr i32 %add.i, 8\l  %conv1.i = trunc i32 %manupa14 to i16\l  %sub119 = sub i16 %conv1.i, %add114\l  %add123 = add i16 %add100, %add114\l  %sub127 = sub i16 %add100, %add114\l  %add131 = add i16 %sub104, %sub119\l  %sub135 = sub i16 %sub104, %sub119\l  %conv137 = sext i16 %add123 to i32\l  %add139 = add nsw i32 %conv84, 64\l  %add140 = add nsw i32 %add139, %conv137\l  %shr141 = lshr i32 %add140, 7\l  %manupa15 = trunc i32 %shr141 to i16\l  %conv143 = add i16 %manupa15, 128\l  %cmp.i379 = icmp ugt i16 %conv143, 255\l  %s.lobit.i380 = ashr i16 %conv143, 15\l  %.not.i381 = xor i16 %s.lobit.i380, 255\l  %call144386 = select i1 %cmp.i379, i16 %.not.i381, i16 %conv143\l  %conv145 = and i16 %call144386, 255\l  store i16 %conv145, i16* %pSrc.0403, align 2, !tbaa !3\l  %conv147 = sext i16 %add131 to i32\l  %add149 = add nsw i32 %conv89, 64\l  %add150 = add nsw i32 %add149, %conv147\l  %shr151 = lshr i32 %add150, 7\l  %manupa16 = trunc i32 %shr151 to i16\l  %conv153 = add i16 %manupa16, 128\l  %cmp.i371 = icmp ugt i16 %conv153, 255\l  %s.lobit.i372 = ashr i16 %conv153, 15\l  %.not.i373 = xor i16 %s.lobit.i372, 255\l  %call154378 = select i1 %cmp.i371, i16 %.not.i373, i16 %conv153\l  %conv155 = and i16 %call154378, 255\l  store i16 %conv155, i16* %arrayidx, align 2, !tbaa !3\l  %conv157 = sext i16 %sub135 to i32\l  %add159 = add nsw i32 %conv92, 64\l  %add160 = add nsw i32 %add159, %conv157\l  %shr161 = lshr i32 %add160, 7\l  %manupa17 = trunc i32 %shr161 to i16\l  %conv163 = add i16 %manupa17, 128\l  %cmp.i363 = icmp ugt i16 %conv163, 255\l  %s.lobit.i364 = ashr i16 %conv163, 15\l  %.not.i365 = xor i16 %s.lobit.i364, 255\l  %call164370 = select i1 %cmp.i363, i16 %.not.i365, i16 %conv163\l  %conv165 = and i16 %call164370, 255\l  store i16 %conv165, i16* %arrayidx3, align 2, !tbaa !3\l  %conv167 = sext i16 %sub127 to i32\l  %conv168 = sext i16 %add94 to i32\l  %sub169 = sub nsw i32 64, %conv168\l  %add170 = add nsw i32 %sub169, %conv167\l  %shr171 = lshr i32 %add170, 7\l  %manupa18 = trunc i32 %shr171 to i16\l  %conv173 = add i16 %manupa18, 128\l  %cmp.i355 = icmp ugt i16 %conv173, 255\l  %s.lobit.i356 = ashr i16 %conv173, 15\l  %.not.i357 = xor i16 %s.lobit.i356, 255\l  %call174362 = select i1 %cmp.i355, i16 %.not.i357, i16 %conv173\l  %conv175 = and i16 %call174362, 255\l  store i16 %conv175, i16* %arrayidx5, align 2, !tbaa !3\l  %add179 = add nsw i32 %conv168, 64\l  %add180 = add nsw i32 %add179, %conv167\l  %shr181 = lshr i32 %add180, 7\l  %manupa19 = trunc i32 %shr181 to i16\l  %conv183 = add i16 %manupa19, 128\l  %cmp.i347 = icmp ugt i16 %conv183, 255\l  %s.lobit.i348 = ashr i16 %conv183, 15\l  %.not.i349 = xor i16 %s.lobit.i348, 255\l  %call184354 = select i1 %cmp.i347, i16 %.not.i349, i16 %conv183\l  %conv185 = and i16 %call184354, 255\l  store i16 %conv185, i16* %arrayidx8, align 2, !tbaa !3\l  %sub189 = sub nsw i32 64, %conv92\l  %add190 = add nsw i32 %sub189, %conv157\l  %shr191 = lshr i32 %add190, 7\l  %manupa20 = trunc i32 %shr191 to i16\l  %conv193 = add i16 %manupa20, 128\l  %cmp.i339 = icmp ugt i16 %conv193, 255\l  %s.lobit.i340 = ashr i16 %conv193, 15\l  %.not.i341 = xor i16 %s.lobit.i340, 255\l  %call194346 = select i1 %cmp.i339, i16 %.not.i341, i16 %conv193\l  %conv195 = and i16 %call194346, 255\l  store i16 %conv195, i16* %arrayidx11, align 2, !tbaa !3\l  %sub199 = sub nsw i32 64, %conv89\l  %add200 = add nsw i32 %sub199, %conv147\l  %shr201 = lshr i32 %add200, 7\l  %manupa21 = trunc i32 %shr201 to i16\l  %conv203 = add i16 %manupa21, 128\l  %cmp.i331 = icmp ugt i16 %conv203, 255\l  %s.lobit.i332 = ashr i16 %conv203, 15\l  %.not.i333 = xor i16 %s.lobit.i332, 255\l  %call204338 = select i1 %cmp.i331, i16 %.not.i333, i16 %conv203\l  %conv205 = and i16 %call204338, 255\l  store i16 %conv205, i16* %arrayidx14, align 2, !tbaa !3\l  %sub209 = sub nsw i32 64, %conv84\l  %add210 = add nsw i32 %sub209, %conv137\l  %shr211 = lshr i32 %add210, 7\l  %manupa22 = trunc i32 %shr211 to i16\l  %conv213 = add i16 %manupa22, 128\l  %cmp.i323 = icmp ugt i16 %conv213, 255\l  %s.lobit.i324 = ashr i16 %conv213, 15\l  %.not.i325 = xor i16 %s.lobit.i324, 255\l  %call214330 = select i1 %cmp.i323, i16 %.not.i325, i16 %conv213\l  %conv215 = and i16 %call214330, 255\l  br label %if.end\l}"];
	Node0x560dd15e8420 -> Node0x560dd15e8470;
	Node0x560dd15e8470 [shape=record,label="{if.end:                                           \l  %storemerge = phi i16 [ %conv215, %if.else ], [ %conv26, %if.then ]\l  store i16 %storemerge, i16* %arrayidx17, align 2, !tbaa !3\l  %incdec.ptr = getelementptr inbounds i16, i16* %pSrc.0403, i32 1\l  %inc = add nuw nsw i8 %i.0405, 1\l  %exitcond = icmp eq i8 %inc, 8\l  br i1 %exitcond, label %for.end, label %for.body\l|{<s0>T|<s1>F}}"];
	Node0x560dd15e8470:s0 -> Node0x560dd15e84c0;
	Node0x560dd15e8470:s1 -> Node0x560dd15e8380;
	Node0x560dd15e84c0 [shape=record,label="{for.end:                                          \l  ret void\l}"];
}
