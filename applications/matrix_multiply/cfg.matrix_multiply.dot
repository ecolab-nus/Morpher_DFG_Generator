digraph "CFG for 'matrix_multiply' function" {
	label="CFG for 'matrix_multiply' function";

	Node0x55a5ea6b62a0 [shape=record,label="{entry:\l  br label %for.body\l}"];
	Node0x55a5ea6b62a0 -> Node0x55a5ea6bdf10;
	Node0x55a5ea6bdf10 [shape=record,label="{for.body:                                         \l  %ijk.0283 = phi i32 [ 0, %entry ], [ %inc195, %for.body ]\l  %j.0282 = phi i32 [ 0, %entry ], [ %j.2, %for.body ]\l  %i.0281 = phi i32 [ 0, %entry ], [ %i.1, %for.body ]\l  %call = tail call i32 bitcast (i32 (...)* @please_map_me to i32 ()*)() #4\l  %mul = shl nsw i32 %i.0281, 4\l  %arrayidx = getelementptr inbounds [128 x i32], [128 x i32]* @WEIGHT_MATRIX,\l... i32 0, i32 %mul\l  %manupa0 = load i32, i32* %arrayidx, align 4, !tbaa !3\l  %arrayidx3 = getelementptr inbounds [256 x i32], [256 x i32]* @INPUT_MATRIX,\l... i32 0, i32 %j.0282\l  %manupa1 = load i32, i32* %arrayidx3, align 4, !tbaa !3\l  %mul4 = mul nsw i32 %manupa1, %manupa0\l  %add7 = or i32 %mul, 1\l  %arrayidx8 = getelementptr inbounds [128 x i32], [128 x i32]*\l... @WEIGHT_MATRIX, i32 0, i32 %add7\l  %manupa2 = load i32, i32* %arrayidx8, align 4, !tbaa !3\l  %add11 = add nsw i32 %j.0282, 16\l  %arrayidx12 = getelementptr inbounds [256 x i32], [256 x i32]*\l... @INPUT_MATRIX, i32 0, i32 %add11\l  %manupa3 = load i32, i32* %arrayidx12, align 4, !tbaa !3\l  %mul13 = mul nsw i32 %manupa3, %manupa2\l  %add14 = add nsw i32 %mul13, %mul4\l  %add17 = or i32 %mul, 2\l  %arrayidx18 = getelementptr inbounds [128 x i32], [128 x i32]*\l... @WEIGHT_MATRIX, i32 0, i32 %add17\l  %manupa4 = load i32, i32* %arrayidx18, align 4, !tbaa !3\l  %add21 = add nsw i32 %j.0282, 32\l  %arrayidx22 = getelementptr inbounds [256 x i32], [256 x i32]*\l... @INPUT_MATRIX, i32 0, i32 %add21\l  %manupa5 = load i32, i32* %arrayidx22, align 4, !tbaa !3\l  %mul23 = mul nsw i32 %manupa5, %manupa4\l  %add24 = add nsw i32 %add14, %mul23\l  %add27 = or i32 %mul, 3\l  %arrayidx28 = getelementptr inbounds [128 x i32], [128 x i32]*\l... @WEIGHT_MATRIX, i32 0, i32 %add27\l  %manupa6 = load i32, i32* %arrayidx28, align 4, !tbaa !3\l  %add31 = add nsw i32 %j.0282, 48\l  %arrayidx32 = getelementptr inbounds [256 x i32], [256 x i32]*\l... @INPUT_MATRIX, i32 0, i32 %add31\l  %manupa7 = load i32, i32* %arrayidx32, align 4, !tbaa !3\l  %mul33 = mul nsw i32 %manupa7, %manupa6\l  %add34 = add nsw i32 %add24, %mul33\l  %add37 = or i32 %mul, 4\l  %arrayidx38 = getelementptr inbounds [128 x i32], [128 x i32]*\l... @WEIGHT_MATRIX, i32 0, i32 %add37\l  %manupa8 = load i32, i32* %arrayidx38, align 4, !tbaa !3\l  %add41 = add nsw i32 %j.0282, 64\l  %arrayidx42 = getelementptr inbounds [256 x i32], [256 x i32]*\l... @INPUT_MATRIX, i32 0, i32 %add41\l  %manupa9 = load i32, i32* %arrayidx42, align 4, !tbaa !3\l  %mul43 = mul nsw i32 %manupa9, %manupa8\l  %add44 = add nsw i32 %add34, %mul43\l  %add47 = or i32 %mul, 5\l  %arrayidx48 = getelementptr inbounds [128 x i32], [128 x i32]*\l... @WEIGHT_MATRIX, i32 0, i32 %add47\l  %manupa10 = load i32, i32* %arrayidx48, align 4, !tbaa !3\l  %add51 = add nsw i32 %j.0282, 80\l  %arrayidx52 = getelementptr inbounds [256 x i32], [256 x i32]*\l... @INPUT_MATRIX, i32 0, i32 %add51\l  %manupa11 = load i32, i32* %arrayidx52, align 4, !tbaa !3\l  %mul53 = mul nsw i32 %manupa11, %manupa10\l  %add54 = add nsw i32 %add44, %mul53\l  %add57 = or i32 %mul, 6\l  %arrayidx58 = getelementptr inbounds [128 x i32], [128 x i32]*\l... @WEIGHT_MATRIX, i32 0, i32 %add57\l  %manupa12 = load i32, i32* %arrayidx58, align 4, !tbaa !3\l  %add61 = add nsw i32 %j.0282, 96\l  %arrayidx62 = getelementptr inbounds [256 x i32], [256 x i32]*\l... @INPUT_MATRIX, i32 0, i32 %add61\l  %manupa13 = load i32, i32* %arrayidx62, align 4, !tbaa !3\l  %mul63 = mul nsw i32 %manupa13, %manupa12\l  %add64 = add nsw i32 %add54, %mul63\l  %add67 = or i32 %mul, 7\l  %arrayidx68 = getelementptr inbounds [128 x i32], [128 x i32]*\l... @WEIGHT_MATRIX, i32 0, i32 %add67\l  %manupa14 = load i32, i32* %arrayidx68, align 4, !tbaa !3\l  %add71 = add nsw i32 %j.0282, 112\l  %arrayidx72 = getelementptr inbounds [256 x i32], [256 x i32]*\l... @INPUT_MATRIX, i32 0, i32 %add71\l  %manupa15 = load i32, i32* %arrayidx72, align 4, !tbaa !3\l  %mul73 = mul nsw i32 %manupa15, %manupa14\l  %add74 = add nsw i32 %add64, %mul73\l  %add77 = or i32 %mul, 8\l  %arrayidx78 = getelementptr inbounds [128 x i32], [128 x i32]*\l... @WEIGHT_MATRIX, i32 0, i32 %add77\l  %manupa16 = load i32, i32* %arrayidx78, align 4, !tbaa !3\l  %add81 = add nsw i32 %j.0282, 128\l  %arrayidx82 = getelementptr inbounds [256 x i32], [256 x i32]*\l... @INPUT_MATRIX, i32 0, i32 %add81\l  %manupa17 = load i32, i32* %arrayidx82, align 4, !tbaa !3\l  %mul83 = mul nsw i32 %manupa17, %manupa16\l  %add84 = add nsw i32 %add74, %mul83\l  %add87 = or i32 %mul, 9\l  %arrayidx88 = getelementptr inbounds [128 x i32], [128 x i32]*\l... @WEIGHT_MATRIX, i32 0, i32 %add87\l  %manupa18 = load i32, i32* %arrayidx88, align 4, !tbaa !3\l  %add91 = add nsw i32 %j.0282, 144\l  %arrayidx92 = getelementptr inbounds [256 x i32], [256 x i32]*\l... @INPUT_MATRIX, i32 0, i32 %add91\l  %manupa19 = load i32, i32* %arrayidx92, align 4, !tbaa !3\l  %mul93 = mul nsw i32 %manupa19, %manupa18\l  %add94 = add nsw i32 %add84, %mul93\l  %add97 = or i32 %mul, 10\l  %arrayidx98 = getelementptr inbounds [128 x i32], [128 x i32]*\l... @WEIGHT_MATRIX, i32 0, i32 %add97\l  %manupa20 = load i32, i32* %arrayidx98, align 4, !tbaa !3\l  %add101 = add nsw i32 %j.0282, 160\l  %arrayidx102 = getelementptr inbounds [256 x i32], [256 x i32]*\l... @INPUT_MATRIX, i32 0, i32 %add101\l  %manupa21 = load i32, i32* %arrayidx102, align 4, !tbaa !3\l  %mul103 = mul nsw i32 %manupa21, %manupa20\l  %add104 = add nsw i32 %add94, %mul103\l  %add107 = or i32 %mul, 11\l  %arrayidx108 = getelementptr inbounds [128 x i32], [128 x i32]*\l... @WEIGHT_MATRIX, i32 0, i32 %add107\l  %manupa22 = load i32, i32* %arrayidx108, align 4, !tbaa !3\l  %add111 = add nsw i32 %j.0282, 176\l  %arrayidx112 = getelementptr inbounds [256 x i32], [256 x i32]*\l... @INPUT_MATRIX, i32 0, i32 %add111\l  %manupa23 = load i32, i32* %arrayidx112, align 4, !tbaa !3\l  %mul113 = mul nsw i32 %manupa23, %manupa22\l  %add114 = add nsw i32 %add104, %mul113\l  %add117 = or i32 %mul, 12\l  %arrayidx118 = getelementptr inbounds [128 x i32], [128 x i32]*\l... @WEIGHT_MATRIX, i32 0, i32 %add117\l  %manupa24 = load i32, i32* %arrayidx118, align 4, !tbaa !3\l  %add121 = add nsw i32 %j.0282, 192\l  %arrayidx122 = getelementptr inbounds [256 x i32], [256 x i32]*\l... @INPUT_MATRIX, i32 0, i32 %add121\l  %manupa25 = load i32, i32* %arrayidx122, align 4, !tbaa !3\l  %mul123 = mul nsw i32 %manupa25, %manupa24\l  %add124 = add nsw i32 %add114, %mul123\l  %add127 = or i32 %mul, 13\l  %arrayidx128 = getelementptr inbounds [128 x i32], [128 x i32]*\l... @WEIGHT_MATRIX, i32 0, i32 %add127\l  %manupa26 = load i32, i32* %arrayidx128, align 4, !tbaa !3\l  %add131 = add nsw i32 %j.0282, 208\l  %arrayidx132 = getelementptr inbounds [256 x i32], [256 x i32]*\l... @INPUT_MATRIX, i32 0, i32 %add131\l  %manupa27 = load i32, i32* %arrayidx132, align 4, !tbaa !3\l  %mul133 = mul nsw i32 %manupa27, %manupa26\l  %add134 = add nsw i32 %add124, %mul133\l  %add137 = or i32 %mul, 14\l  %arrayidx138 = getelementptr inbounds [128 x i32], [128 x i32]*\l... @WEIGHT_MATRIX, i32 0, i32 %add137\l  %manupa28 = load i32, i32* %arrayidx138, align 4, !tbaa !3\l  %add141 = add nsw i32 %j.0282, 224\l  %arrayidx142 = getelementptr inbounds [256 x i32], [256 x i32]*\l... @INPUT_MATRIX, i32 0, i32 %add141\l  %manupa29 = load i32, i32* %arrayidx142, align 4, !tbaa !3\l  %mul143 = mul nsw i32 %manupa29, %manupa28\l  %add144 = add nsw i32 %add134, %mul143\l  %add147 = or i32 %mul, 15\l  %arrayidx148 = getelementptr inbounds [128 x i32], [128 x i32]*\l... @WEIGHT_MATRIX, i32 0, i32 %add147\l  %manupa30 = load i32, i32* %arrayidx148, align 4, !tbaa !3\l  %add151 = add nsw i32 %j.0282, 240\l  %arrayidx152 = getelementptr inbounds [256 x i32], [256 x i32]*\l... @INPUT_MATRIX, i32 0, i32 %add151\l  %manupa31 = load i32, i32* %arrayidx152, align 4, !tbaa !3\l  %mul153 = mul nsw i32 %manupa31, %manupa30\l  %add154 = add nsw i32 %add144, %mul153\l  %add157 = add nuw nsw i32 %mul, 16\l  %arrayidx158 = getelementptr inbounds [128 x i32], [128 x i32]*\l... @WEIGHT_MATRIX, i32 0, i32 %add157\l  %manupa32 = load i32, i32* %arrayidx158, align 4, !tbaa !3\l  %add161 = add nsw i32 %j.0282, 256\l  %arrayidx162 = getelementptr inbounds [256 x i32], [256 x i32]*\l... @INPUT_MATRIX, i32 0, i32 %add161\l  %manupa33 = load i32, i32* %arrayidx162, align 4, !tbaa !3\l  %mul163 = mul nsw i32 %manupa33, %manupa32\l  %add164 = add nsw i32 %add154, %mul163\l  %add167 = add nuw nsw i32 %mul, 17\l  %arrayidx168 = getelementptr inbounds [128 x i32], [128 x i32]*\l... @WEIGHT_MATRIX, i32 0, i32 %add167\l  %manupa34 = load i32, i32* %arrayidx168, align 4, !tbaa !3\l  %add171 = add nsw i32 %j.0282, 272\l  %arrayidx172 = getelementptr inbounds [256 x i32], [256 x i32]*\l... @INPUT_MATRIX, i32 0, i32 %add171\l  %manupa35 = load i32, i32* %arrayidx172, align 4, !tbaa !3\l  %mul173 = mul nsw i32 %manupa35, %manupa34\l  %add174 = add nsw i32 %add164, %mul173\l  %add177 = add nuw nsw i32 %mul, 18\l  %arrayidx178 = getelementptr inbounds [128 x i32], [128 x i32]*\l... @WEIGHT_MATRIX, i32 0, i32 %add177\l  %manupa36 = load i32, i32* %arrayidx178, align 4, !tbaa !3\l  %add181 = add nsw i32 %j.0282, 288\l  %arrayidx182 = getelementptr inbounds [256 x i32], [256 x i32]*\l... @INPUT_MATRIX, i32 0, i32 %add181\l  %manupa37 = load i32, i32* %arrayidx182, align 4, !tbaa !3\l  %mul183 = mul nsw i32 %manupa37, %manupa36\l  %add184 = add nsw i32 %add174, %mul183\l  %add186 = add nsw i32 %mul, %j.0282\l  %arrayidx187 = getelementptr inbounds [128 x i32], [128 x i32]*\l... @OUTPUT_MATRIX, i32 0, i32 %add186\l  store i32 %add184, i32* %arrayidx187, align 4, !tbaa !3\l  %inc = add nsw i32 %j.0282, 1\l  %cmp191 = icmp eq i32 %inc, 16\l  %inc193 = zext i1 %cmp191 to i32\l  %i.1 = add nuw nsw i32 %i.0281, %inc193\l  %j.2 = select i1 %cmp191, i32 0, i32 %inc\l  %inc195 = add nuw nsw i32 %ijk.0283, 1\l  %exitcond = icmp eq i32 %inc195, 512\l  br i1 %exitcond, label %for.end, label %for.body\l|{<s0>T|<s1>F}}"];
	Node0x55a5ea6bdf10:s0 -> Node0x55a5ea6bdf60;
	Node0x55a5ea6bdf10:s1 -> Node0x55a5ea6bdf10;
	Node0x55a5ea6bdf60 [shape=record,label="{for.end:                                          \l  ret void\l}"];
}
