digraph "CFG for '_nettle_sha256_compress' function" {
	label="CFG for '_nettle_sha256_compress' function";

	Node0x5642b8b58870 [shape=record,label="{entry:\l  %data = alloca [16 x i32], align 4\l  %manupa0 = bitcast [16 x i32]* %data to i8*\l  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %manupa0) #7\l  br label %for.body\l}"];
	Node0x5642b8b58870 -> Node0x5642b8b61d00;
	Node0x5642b8b61d00 [shape=record,label="{for.body:                                         \l  %i.01151 = phi i32 [ 0, %entry ], [ %inc, %for.body ]\l  %input.addr.01150 = phi i8* [ %input, %entry ], [ %add.ptr, %for.body ]\l  %manupa1 = load i8, i8* %input.addr.01150, align 1, !tbaa !3\l  %conv = zext i8 %manupa1 to i32\l  %shl = shl nuw i32 %conv, 24\l  %arrayidx1 = getelementptr inbounds i8, i8* %input.addr.01150, i32 1\l  %manupa2 = load i8, i8* %arrayidx1, align 1, !tbaa !3\l  %conv2 = zext i8 %manupa2 to i32\l  %shl3 = shl nuw nsw i32 %conv2, 16\l  %or = or i32 %shl3, %shl\l  %arrayidx4 = getelementptr inbounds i8, i8* %input.addr.01150, i32 2\l  %manupa3 = load i8, i8* %arrayidx4, align 1, !tbaa !3\l  %conv5 = zext i8 %manupa3 to i32\l  %shl6 = shl nuw nsw i32 %conv5, 8\l  %or7 = or i32 %or, %shl6\l  %arrayidx8 = getelementptr inbounds i8, i8* %input.addr.01150, i32 3\l  %manupa4 = load i8, i8* %arrayidx8, align 1, !tbaa !3\l  %conv9 = zext i8 %manupa4 to i32\l  %or10 = or i32 %or7, %conv9\l  %arrayidx11 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0,\l... i32 %i.01151\l  store i32 %or10, i32* %arrayidx11, align 4, !tbaa !6\l  %inc = add nuw nsw i32 %i.01151, 1\l  %add.ptr = getelementptr inbounds i8, i8* %input.addr.01150, i32 4\l  %exitcond = icmp eq i32 %inc, 16\l  br i1 %exitcond, label %for.end, label %for.body\l|{<s0>T|<s1>F}}"];
	Node0x5642b8b61d00:s0 -> Node0x5642b8b61d50;
	Node0x5642b8b61d00:s1 -> Node0x5642b8b61d00;
	Node0x5642b8b61d50 [shape=record,label="{for.end:                                          \l  %manupa5 = load i32, i32* %state, align 4, !tbaa !6\l  %arrayidx13 = getelementptr inbounds i32, i32* %state, i32 1\l  %manupa6 = load i32, i32* %arrayidx13, align 4, !tbaa !6\l  %arrayidx14 = getelementptr inbounds i32, i32* %state, i32 2\l  %manupa7 = load i32, i32* %arrayidx14, align 4, !tbaa !6\l  %arrayidx15 = getelementptr inbounds i32, i32* %state, i32 3\l  %manupa8 = load i32, i32* %arrayidx15, align 4, !tbaa !6\l  %arrayidx16 = getelementptr inbounds i32, i32* %state, i32 4\l  %manupa9 = load i32, i32* %arrayidx16, align 4, !tbaa !6\l  %arrayidx17 = getelementptr inbounds i32, i32* %state, i32 5\l  %manupa10 = load i32, i32* %arrayidx17, align 4, !tbaa !6\l  %arrayidx18 = getelementptr inbounds i32, i32* %state, i32 6\l  %manupa11 = load i32, i32* %arrayidx18, align 4, !tbaa !6\l  %arrayidx19 = getelementptr inbounds i32, i32* %state, i32 7\l  %manupa12 = load i32, i32* %arrayidx19, align 4, !tbaa !6\l  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0,\l... i32 0\l  br label %do.body\l}"];
	Node0x5642b8b61d50 -> Node0x5642b8b61df0;
	Node0x5642b8b61da0 [shape=record,label="{for.body353.lr.ph:                                \l  %add202.lcssa = phi i32 [ %add202, %do.body ]\l  %add219.lcssa = phi i32 [ %add219, %do.body ]\l  %add243.lcssa = phi i32 [ %add243, %do.body ]\l  %add260.lcssa = phi i32 [ %add260, %do.body ]\l  %add284.lcssa = phi i32 [ %add284, %do.body ]\l  %add301.lcssa = phi i32 [ %add301, %do.body ]\l  %add325.lcssa = phi i32 [ %add325, %do.body ]\l  %add342.lcssa = phi i32 [ %add342, %do.body ]\l  %arrayidx372 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0,\l... i32 14\l  %manupa13 = load i32, i32* %arrayidx372, align 4\l  %shl373 = shl i32 %manupa13, 15\l  %shr375 = lshr i32 %manupa13, 17\l  %or376 = or i32 %shl373, %shr375\l  %shl378 = shl i32 %manupa13, 13\l  %shr380 = lshr i32 %manupa13, 19\l  %or381 = or i32 %shl378, %shr380\l  %shr384 = lshr i32 %manupa13, 10\l  %xor382 = xor i32 %or381, %shr384\l  %xor385 = xor i32 %xor382, %or376\l  %arrayidx386 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0,\l... i32 9\l  %manupa14 = load i32, i32* %arrayidx386, align 4\l  %arrayidx388 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0,\l... i32 1\l  %arrayidx445 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0,\l... i32 15\l  %manupa15 = load i32, i32* %arrayidx445, align 4\l  %shl446 = shl i32 %manupa15, 15\l  %shr448 = lshr i32 %manupa15, 17\l  %or449 = or i32 %shl446, %shr448\l  %shl451 = shl i32 %manupa15, 13\l  %shr453 = lshr i32 %manupa15, 19\l  %or454 = or i32 %shl451, %shr453\l  %shr457 = lshr i32 %manupa15, 10\l  %xor455 = xor i32 %or454, %shr457\l  %xor458 = xor i32 %xor455, %or449\l  %arrayidx459 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0,\l... i32 10\l  %manupa16 = load i32, i32* %arrayidx459, align 4\l  %arrayidx461 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0,\l... i32 2\l  %arrayidx532 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0,\l... i32 11\l  %manupa17 = load i32, i32* %arrayidx532, align 4\l  %arrayidx534 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0,\l... i32 3\l  %arrayidx605 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0,\l... i32 12\l  %manupa18 = load i32, i32* %arrayidx605, align 4\l  %arrayidx607 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0,\l... i32 4\l  %arrayidx678 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0,\l... i32 13\l  %manupa19 = load i32, i32* %arrayidx678, align 4\l  %arrayidx680 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0,\l... i32 5\l  %manupa20 = load i32, i32* %arrayidx680, align 4\l  %shl681 = shl i32 %manupa20, 25\l  %shr683 = lshr i32 %manupa20, 7\l  %or684 = or i32 %shl681, %shr683\l  %shl686 = shl i32 %manupa20, 14\l  %shr688 = lshr i32 %manupa20, 18\l  %or689 = or i32 %shl686, %shr688\l  %shr692 = lshr i32 %manupa20, 3\l  %xor690 = xor i32 %or689, %shr692\l  %xor693 = xor i32 %xor690, %or684\l  %arrayidx388.promoted = load i32, i32* %arrayidx388, align 4, !tbaa !6\l  %arraydecay.promoted = load i32, i32* %arraydecay, align 4, !tbaa !6\l  %arrayidx461.promoted = load i32, i32* %arrayidx461, align 4, !tbaa !6\l  %arrayidx534.promoted = load i32, i32* %arrayidx534, align 4, !tbaa !6\l  %arrayidx607.promoted = load i32, i32* %arrayidx607, align 4, !tbaa !6\l  br label %for.body353\l}"];
	Node0x5642b8b61da0 -> Node0x5642b8b61e40;
	Node0x5642b8b61df0 [shape=record,label="{do.body:                                          \l  %d.01149 = phi i32* [ %arraydecay, %for.end ], [ %add.ptr348, %do.body ]\l  %i.11148 = phi i1 [ true, %for.end ], [ false, %do.body ]\l  %H.01147 = phi i32 [ %manupa12, %for.end ], [ %add202, %do.body ]\l  %G.01146 = phi i32 [ %manupa11, %for.end ], [ %add243, %do.body ]\l  %F.01145 = phi i32 [ %manupa10, %for.end ], [ %add284, %do.body ]\l  %E.01144 = phi i32 [ %manupa9, %for.end ], [ %add325, %do.body ]\l  %D.01143 = phi i32 [ %manupa8, %for.end ], [ %add219, %do.body ]\l  %C.01142 = phi i32 [ %manupa7, %for.end ], [ %add260, %do.body ]\l  %B.01141 = phi i32 [ %manupa6, %for.end ], [ %add301, %do.body ]\l  %A.01140 = phi i32 [ %manupa5, %for.end ], [ %add342, %do.body ]\l  %k.addr.01139 = phi i32* [ %k, %for.end ], [ %add.ptr347, %do.body ]\l  %shl24 = shl i32 %E.01144, 26\l  %shr = lshr i32 %E.01144, 6\l  %or25 = or i32 %shl24, %shr\l  %shl26 = shl i32 %E.01144, 21\l  %shr27 = lshr i32 %E.01144, 11\l  %or28 = or i32 %shl26, %shr27\l  %xor = xor i32 %or25, %or28\l  %shl29 = shl i32 %E.01144, 7\l  %shr30 = lshr i32 %E.01144, 25\l  %or31 = or i32 %shl29, %shr30\l  %xor32 = xor i32 %xor, %or31\l  %xor33 = xor i32 %G.01146, %F.01145\l  %and = and i32 %xor33, %E.01144\l  %xor34 = xor i32 %and, %G.01146\l  %manupa21 = load i32, i32* %k.addr.01139, align 4, !tbaa !6\l  %manupa22 = load i32, i32* %d.01149, align 4, !tbaa !6\l  %add = add i32 %xor32, %H.01147\l  %add36 = add i32 %add, %xor34\l  %add38 = add i32 %add36, %manupa21\l  %add39 = add i32 %add38, %manupa22\l  %add40 = add i32 %add39, %D.01143\l  %shl41 = shl i32 %A.01140, 30\l  %shr42 = lshr i32 %A.01140, 2\l  %or43 = or i32 %shl41, %shr42\l  %shl44 = shl i32 %A.01140, 19\l  %shr45 = lshr i32 %A.01140, 13\l  %or46 = or i32 %shl44, %shr45\l  %xor47 = xor i32 %or43, %or46\l  %shl48 = shl i32 %A.01140, 10\l  %shr49 = lshr i32 %A.01140, 22\l  %or50 = or i32 %shl48, %shr49\l  %xor51 = xor i32 %xor47, %or50\l  %and52 = and i32 %B.01141, %A.01140\l  %xor53 = xor i32 %B.01141, %A.01140\l  %and54 = and i32 %C.01142, %xor53\l  %xor55 = xor i32 %and54, %and52\l  %add56 = add i32 %xor51, %xor55\l  %add57 = add i32 %add56, %add39\l  %shl59 = shl i32 %add40, 26\l  %shr60 = lshr i32 %add40, 6\l  %or61 = or i32 %shl59, %shr60\l  %shl62 = shl i32 %add40, 21\l  %shr63 = lshr i32 %add40, 11\l  %or64 = or i32 %shl62, %shr63\l  %xor65 = xor i32 %or61, %or64\l  %shl66 = shl i32 %add40, 7\l  %shr67 = lshr i32 %add40, 25\l  %or68 = or i32 %shl66, %shr67\l  %xor69 = xor i32 %xor65, %or68\l  %xor70 = xor i32 %F.01145, %E.01144\l  %and71 = and i32 %add40, %xor70\l  %xor72 = xor i32 %and71, %F.01145\l  %arrayidx74 = getelementptr inbounds i32, i32* %k.addr.01139, i32 1\l  %manupa23 = load i32, i32* %arrayidx74, align 4, !tbaa !6\l  %arrayidx76 = getelementptr inbounds i32, i32* %d.01149, i32 1\l  %manupa24 = load i32, i32* %arrayidx76, align 4, !tbaa !6\l  %add73 = add i32 %manupa23, %G.01146\l  %add75 = add i32 %add73, %manupa24\l  %add77 = add i32 %add75, %xor72\l  %add78 = add i32 %add77, %xor69\l  %add79 = add i32 %add78, %C.01142\l  %shl80 = shl i32 %add57, 30\l  %shr81 = lshr i32 %add57, 2\l  %or82 = or i32 %shl80, %shr81\l  %shl83 = shl i32 %add57, 19\l  %shr84 = lshr i32 %add57, 13\l  %or85 = or i32 %shl83, %shr84\l  %xor86 = xor i32 %or82, %or85\l  %shl87 = shl i32 %add57, 10\l  %shr88 = lshr i32 %add57, 22\l  %or89 = or i32 %shl87, %shr88\l  %xor90 = xor i32 %xor86, %or89\l  %and91 = and i32 %add57, %A.01140\l  %xor92 = xor i32 %add57, %A.01140\l  %and93 = and i32 %xor92, %B.01141\l  %xor94 = xor i32 %and93, %and91\l  %add95 = add i32 %xor90, %xor94\l  %add96 = add i32 %add95, %add78\l  %shl100 = shl i32 %add79, 26\l  %shr101 = lshr i32 %add79, 6\l  %or102 = or i32 %shl100, %shr101\l  %shl103 = shl i32 %add79, 21\l  %shr104 = lshr i32 %add79, 11\l  %or105 = or i32 %shl103, %shr104\l  %xor106 = xor i32 %or102, %or105\l  %shl107 = shl i32 %add79, 7\l  %shr108 = lshr i32 %add79, 25\l  %or109 = or i32 %shl107, %shr108\l  %xor110 = xor i32 %xor106, %or109\l  %xor111 = xor i32 %add40, %E.01144\l  %and112 = and i32 %add79, %xor111\l  %xor113 = xor i32 %and112, %E.01144\l  %arrayidx115 = getelementptr inbounds i32, i32* %k.addr.01139, i32 2\l  %manupa25 = load i32, i32* %arrayidx115, align 4, !tbaa !6\l  %arrayidx117 = getelementptr inbounds i32, i32* %d.01149, i32 2\l  %manupa26 = load i32, i32* %arrayidx117, align 4, !tbaa !6\l  %add114 = add i32 %manupa25, %F.01145\l  %add116 = add i32 %add114, %manupa26\l  %add118 = add i32 %add116, %xor113\l  %add119 = add i32 %add118, %xor110\l  %add120 = add i32 %add119, %B.01141\l  %shl121 = shl i32 %add96, 30\l  %shr122 = lshr i32 %add96, 2\l  %or123 = or i32 %shl121, %shr122\l  %shl124 = shl i32 %add96, 19\l  %shr125 = lshr i32 %add96, 13\l  %or126 = or i32 %shl124, %shr125\l  %xor127 = xor i32 %or123, %or126\l  %shl128 = shl i32 %add96, 10\l  %shr129 = lshr i32 %add96, 22\l  %or130 = or i32 %shl128, %shr129\l  %xor131 = xor i32 %xor127, %or130\l  %and132 = and i32 %add96, %add57\l  %xor133 = xor i32 %add96, %add57\l  %and134 = and i32 %xor133, %A.01140\l  %xor135 = xor i32 %and134, %and132\l  %add136 = add i32 %xor131, %xor135\l  %add137 = add i32 %add136, %add119\l  %shl141 = shl i32 %add120, 26\l  %shr142 = lshr i32 %add120, 6\l  %or143 = or i32 %shl141, %shr142\l  %shl144 = shl i32 %add120, 21\l  %shr145 = lshr i32 %add120, 11\l  %or146 = or i32 %shl144, %shr145\l  %xor147 = xor i32 %or143, %or146\l  %shl148 = shl i32 %add120, 7\l  %shr149 = lshr i32 %add120, 25\l  %or150 = or i32 %shl148, %shr149\l  %xor151 = xor i32 %xor147, %or150\l  %xor152 = xor i32 %add79, %add40\l  %and153 = and i32 %add120, %xor152\l  %xor154 = xor i32 %and153, %add40\l  %arrayidx156 = getelementptr inbounds i32, i32* %k.addr.01139, i32 3\l  %manupa27 = load i32, i32* %arrayidx156, align 4, !tbaa !6\l  %arrayidx158 = getelementptr inbounds i32, i32* %d.01149, i32 3\l  %manupa28 = load i32, i32* %arrayidx158, align 4, !tbaa !6\l  %add155 = add i32 %manupa27, %E.01144\l  %add157 = add i32 %add155, %manupa28\l  %add159 = add i32 %add157, %xor154\l  %add160 = add i32 %add159, %xor151\l  %add161 = add i32 %add160, %A.01140\l  %shl162 = shl i32 %add137, 30\l  %shr163 = lshr i32 %add137, 2\l  %or164 = or i32 %shl162, %shr163\l  %shl165 = shl i32 %add137, 19\l  %shr166 = lshr i32 %add137, 13\l  %or167 = or i32 %shl165, %shr166\l  %xor168 = xor i32 %or164, %or167\l  %shl169 = shl i32 %add137, 10\l  %shr170 = lshr i32 %add137, 22\l  %or171 = or i32 %shl169, %shr170\l  %xor172 = xor i32 %xor168, %or171\l  %and173 = and i32 %add137, %add96\l  %xor174 = xor i32 %add137, %add96\l  %and175 = and i32 %xor174, %add57\l  %xor176 = xor i32 %and175, %and173\l  %add177 = add i32 %xor172, %xor176\l  %add178 = add i32 %add177, %add160\l  %shl182 = shl i32 %add161, 26\l  %shr183 = lshr i32 %add161, 6\l  %or184 = or i32 %shl182, %shr183\l  %shl185 = shl i32 %add161, 21\l  %shr186 = lshr i32 %add161, 11\l  %or187 = or i32 %shl185, %shr186\l  %xor188 = xor i32 %or184, %or187\l  %shl189 = shl i32 %add161, 7\l  %shr190 = lshr i32 %add161, 25\l  %or191 = or i32 %shl189, %shr190\l  %xor192 = xor i32 %xor188, %or191\l  %xor193 = xor i32 %add120, %add79\l  %and194 = and i32 %add161, %xor193\l  %xor195 = xor i32 %and194, %add79\l  %arrayidx197 = getelementptr inbounds i32, i32* %k.addr.01139, i32 4\l  %manupa29 = load i32, i32* %arrayidx197, align 4, !tbaa !6\l  %arrayidx199 = getelementptr inbounds i32, i32* %d.01149, i32 4\l  %manupa30 = load i32, i32* %arrayidx199, align 4, !tbaa !6\l  %add196 = add i32 %manupa29, %add40\l  %add198 = add i32 %add196, %manupa30\l  %add200 = add i32 %add198, %xor195\l  %add201 = add i32 %add200, %xor192\l  %add202 = add i32 %add201, %add57\l  %shl203 = shl i32 %add178, 30\l  %shr204 = lshr i32 %add178, 2\l  %or205 = or i32 %shl203, %shr204\l  %shl206 = shl i32 %add178, 19\l  %shr207 = lshr i32 %add178, 13\l  %or208 = or i32 %shl206, %shr207\l  %xor209 = xor i32 %or205, %or208\l  %shl210 = shl i32 %add178, 10\l  %shr211 = lshr i32 %add178, 22\l  %or212 = or i32 %shl210, %shr211\l  %xor213 = xor i32 %xor209, %or212\l  %and214 = and i32 %add178, %add137\l  %xor215 = xor i32 %add178, %add137\l  %and216 = and i32 %xor215, %add96\l  %xor217 = xor i32 %and216, %and214\l  %add218 = add i32 %xor213, %xor217\l  %add219 = add i32 %add218, %add201\l  %shl223 = shl i32 %add202, 26\l  %shr224 = lshr i32 %add202, 6\l  %or225 = or i32 %shl223, %shr224\l  %shl226 = shl i32 %add202, 21\l  %shr227 = lshr i32 %add202, 11\l  %or228 = or i32 %shl226, %shr227\l  %xor229 = xor i32 %or225, %or228\l  %shl230 = shl i32 %add202, 7\l  %shr231 = lshr i32 %add202, 25\l  %or232 = or i32 %shl230, %shr231\l  %xor233 = xor i32 %xor229, %or232\l  %xor234 = xor i32 %add161, %add120\l  %and235 = and i32 %add202, %xor234\l  %xor236 = xor i32 %and235, %add120\l  %arrayidx238 = getelementptr inbounds i32, i32* %k.addr.01139, i32 5\l  %manupa31 = load i32, i32* %arrayidx238, align 4, !tbaa !6\l  %arrayidx240 = getelementptr inbounds i32, i32* %d.01149, i32 5\l  %manupa32 = load i32, i32* %arrayidx240, align 4, !tbaa !6\l  %add237 = add i32 %manupa32, %manupa31\l  %add239 = add i32 %add237, %add79\l  %add241 = add i32 %add239, %xor236\l  %add242 = add i32 %add241, %xor233\l  %add243 = add i32 %add242, %add96\l  %shl244 = shl i32 %add219, 30\l  %shr245 = lshr i32 %add219, 2\l  %or246 = or i32 %shl244, %shr245\l  %shl247 = shl i32 %add219, 19\l  %shr248 = lshr i32 %add219, 13\l  %or249 = or i32 %shl247, %shr248\l  %xor250 = xor i32 %or246, %or249\l  %shl251 = shl i32 %add219, 10\l  %shr252 = lshr i32 %add219, 22\l  %or253 = or i32 %shl251, %shr252\l  %xor254 = xor i32 %xor250, %or253\l  %and255 = and i32 %add219, %add178\l  %xor256 = xor i32 %add219, %add178\l  %and257 = and i32 %xor256, %add137\l  %xor258 = xor i32 %and257, %and255\l  %add259 = add i32 %xor254, %xor258\l  %add260 = add i32 %add259, %add242\l  %shl264 = shl i32 %add243, 26\l  %shr265 = lshr i32 %add243, 6\l  %or266 = or i32 %shl264, %shr265\l  %shl267 = shl i32 %add243, 21\l  %shr268 = lshr i32 %add243, 11\l  %or269 = or i32 %shl267, %shr268\l  %xor270 = xor i32 %or266, %or269\l  %shl271 = shl i32 %add243, 7\l  %shr272 = lshr i32 %add243, 25\l  %or273 = or i32 %shl271, %shr272\l  %xor274 = xor i32 %xor270, %or273\l  %xor275 = xor i32 %add202, %add161\l  %and276 = and i32 %add243, %xor275\l  %xor277 = xor i32 %and276, %add161\l  %arrayidx279 = getelementptr inbounds i32, i32* %k.addr.01139, i32 6\l  %manupa33 = load i32, i32* %arrayidx279, align 4, !tbaa !6\l  %arrayidx281 = getelementptr inbounds i32, i32* %d.01149, i32 6\l  %manupa34 = load i32, i32* %arrayidx281, align 4, !tbaa !6\l  %add278 = add i32 %manupa34, %manupa33\l  %add280 = add i32 %add278, %add120\l  %add282 = add i32 %add280, %xor277\l  %add283 = add i32 %add282, %xor274\l  %add284 = add i32 %add283, %add137\l  %shl285 = shl i32 %add260, 30\l  %shr286 = lshr i32 %add260, 2\l  %or287 = or i32 %shl285, %shr286\l  %shl288 = shl i32 %add260, 19\l  %shr289 = lshr i32 %add260, 13\l  %or290 = or i32 %shl288, %shr289\l  %xor291 = xor i32 %or287, %or290\l  %shl292 = shl i32 %add260, 10\l  %shr293 = lshr i32 %add260, 22\l  %or294 = or i32 %shl292, %shr293\l  %xor295 = xor i32 %xor291, %or294\l  %and296 = and i32 %add260, %add219\l  %xor297 = xor i32 %add260, %add219\l  %and298 = and i32 %xor297, %add178\l  %xor299 = xor i32 %and298, %and296\l  %add300 = add i32 %xor295, %xor299\l  %add301 = add i32 %add300, %add283\l  %shl305 = shl i32 %add284, 26\l  %shr306 = lshr i32 %add284, 6\l  %or307 = or i32 %shl305, %shr306\l  %shl308 = shl i32 %add284, 21\l  %shr309 = lshr i32 %add284, 11\l  %or310 = or i32 %shl308, %shr309\l  %xor311 = xor i32 %or307, %or310\l  %shl312 = shl i32 %add284, 7\l  %shr313 = lshr i32 %add284, 25\l  %or314 = or i32 %shl312, %shr313\l  %xor315 = xor i32 %xor311, %or314\l  %xor316 = xor i32 %add243, %add202\l  %and317 = and i32 %add284, %xor316\l  %xor318 = xor i32 %and317, %add202\l  %arrayidx320 = getelementptr inbounds i32, i32* %k.addr.01139, i32 7\l  %manupa35 = load i32, i32* %arrayidx320, align 4, !tbaa !6\l  %arrayidx322 = getelementptr inbounds i32, i32* %d.01149, i32 7\l  %manupa36 = load i32, i32* %arrayidx322, align 4, !tbaa !6\l  %add319 = add i32 %manupa36, %manupa35\l  %add321 = add i32 %add319, %add161\l  %add323 = add i32 %add321, %xor318\l  %add324 = add i32 %add323, %xor315\l  %add325 = add i32 %add324, %add178\l  %shl326 = shl i32 %add301, 30\l  %shr327 = lshr i32 %add301, 2\l  %or328 = or i32 %shl326, %shr327\l  %shl329 = shl i32 %add301, 19\l  %shr330 = lshr i32 %add301, 13\l  %or331 = or i32 %shl329, %shr330\l  %xor332 = xor i32 %or328, %or331\l  %shl333 = shl i32 %add301, 10\l  %shr334 = lshr i32 %add301, 22\l  %or335 = or i32 %shl333, %shr334\l  %xor336 = xor i32 %xor332, %or335\l  %and337 = and i32 %add301, %add260\l  %xor338 = xor i32 %add301, %add260\l  %and339 = and i32 %xor338, %add219\l  %xor340 = xor i32 %and339, %and337\l  %add341 = add i32 %xor336, %xor340\l  %add342 = add i32 %add341, %add324\l  %add.ptr347 = getelementptr inbounds i32, i32* %k.addr.01139, i32 8\l  %add.ptr348 = getelementptr inbounds i32, i32* %d.01149, i32 8\l  br i1 %i.11148, label %do.body, label %for.body353.lr.ph\l|{<s0>T|<s1>F}}"];
	Node0x5642b8b61df0:s0 -> Node0x5642b8b61df0;
	Node0x5642b8b61df0:s1 -> Node0x5642b8b61da0;
	Node0x5642b8b61e40 [shape=record,label="{for.body353:                                      \l  %add6961155 = phi i32 [ %arrayidx607.promoted, %for.body353.lr.ph ], [\l... %add696, %for.body353 ]\l  %add6231154 = phi i32 [ %arrayidx534.promoted, %for.body353.lr.ph ], [\l... %add623, %for.body353 ]\l  %add5501153 = phi i32 [ %arrayidx461.promoted, %for.body353.lr.ph ], [\l... %add550, %for.body353 ]\l  %manupa37 = phi i32 [ %arraydecay.promoted, %for.body353.lr.ph ], [ %add404,\l... %for.body353 ]\l  %add4771152 = phi i32 [ %arrayidx388.promoted, %for.body353.lr.ph ], [\l... %add477, %for.body353 ]\l  %i.21131 = phi i32 [ 16, %for.body353.lr.ph ], [ %add720, %for.body353 ]\l  %H.11130 = phi i32 [ %add202.lcssa, %for.body353.lr.ph ], [ %add699,\l... %for.body353 ]\l  %G.11129 = phi i32 [ %add243.lcssa, %for.body353.lr.ph ], [ %add497,\l... %for.body353 ]\l  %F.11128 = phi i32 [ %add284.lcssa, %for.body353.lr.ph ], [ %add570,\l... %for.body353 ]\l  %E.11127 = phi i32 [ %add325.lcssa, %for.body353.lr.ph ], [ %add643,\l... %for.body353 ]\l  %D.11126 = phi i32 [ %add219.lcssa, %for.body353.lr.ph ], [ %add716,\l... %for.body353 ]\l  %C.11125 = phi i32 [ %add260.lcssa, %for.body353.lr.ph ], [ %add480,\l... %for.body353 ]\l  %B.11124 = phi i32 [ %add301.lcssa, %for.body353.lr.ph ], [ %add553,\l... %for.body353 ]\l  %A.11123 = phi i32 [ %add342.lcssa, %for.body353.lr.ph ], [ %add626,\l... %for.body353 ]\l  %k.pn = phi i32* [ %k, %for.body353.lr.ph ], [ %k.addr.11122, %for.body353 ]\l  %k.addr.11122 = getelementptr inbounds i32, i32* %k.pn, i32 16\l  %call = tail call i32 bitcast (i32 (...)* @please_map_me to i32 ()*)() #7\l  %shl355 = shl i32 %E.11127, 26\l  %shr356 = lshr i32 %E.11127, 6\l  %or357 = or i32 %shl355, %shr356\l  %shl358 = shl i32 %E.11127, 21\l  %shr359 = lshr i32 %E.11127, 11\l  %or360 = or i32 %shl358, %shr359\l  %xor361 = xor i32 %or357, %or360\l  %shl362 = shl i32 %E.11127, 7\l  %shr363 = lshr i32 %E.11127, 25\l  %or364 = or i32 %shl362, %shr363\l  %xor365 = xor i32 %xor361, %or364\l  %xor366 = xor i32 %G.11129, %F.11128\l  %and367 = and i32 %xor366, %E.11127\l  %xor368 = xor i32 %and367, %G.11129\l  %manupa38 = load i32, i32* %k.addr.11122, align 4, !tbaa !6\l  %shl389 = shl i32 %add4771152, 25\l  %shr391 = lshr i32 %add4771152, 7\l  %or392 = or i32 %shl389, %shr391\l  %shl394 = shl i32 %add4771152, 14\l  %shr396 = lshr i32 %add4771152, 18\l  %or397 = or i32 %shl394, %shr396\l  %shr400 = lshr i32 %add4771152, 3\l  %xor398 = xor i32 %or397, %shr400\l  %xor401 = xor i32 %xor398, %or392\l  %add387 = add i32 %manupa37, %manupa14\l  %add402 = add i32 %add387, %xor385\l  %add404 = add i32 %add402, %xor401\l  %add369 = add i32 %xor365, %H.11130\l  %add371 = add i32 %add369, %xor368\l  %add405 = add i32 %add371, %manupa38\l  %add406 = add i32 %add405, %add404\l  %add407 = add i32 %add406, %D.11126\l  %shl408 = shl i32 %A.11123, 30\l  %shr409 = lshr i32 %A.11123, 2\l  %or410 = or i32 %shl408, %shr409\l  %shl411 = shl i32 %A.11123, 19\l  %shr412 = lshr i32 %A.11123, 13\l  %or413 = or i32 %shl411, %shr412\l  %xor414 = xor i32 %or410, %or413\l  %shl415 = shl i32 %A.11123, 10\l  %shr416 = lshr i32 %A.11123, 22\l  %or417 = or i32 %shl415, %shr416\l  %xor418 = xor i32 %xor414, %or417\l  %and419 = and i32 %B.11124, %A.11123\l  %xor420 = xor i32 %B.11124, %A.11123\l  %and421 = and i32 %C.11125, %xor420\l  %xor422 = xor i32 %and421, %and419\l  %add423 = add i32 %xor418, %xor422\l  %add424 = add i32 %add423, %add406\l  %shl428 = shl i32 %add407, 26\l  %shr429 = lshr i32 %add407, 6\l  %or430 = or i32 %shl428, %shr429\l  %shl431 = shl i32 %add407, 21\l  %shr432 = lshr i32 %add407, 11\l  %or433 = or i32 %shl431, %shr432\l  %xor434 = xor i32 %or430, %or433\l  %shl435 = shl i32 %add407, 7\l  %shr436 = lshr i32 %add407, 25\l  %or437 = or i32 %shl435, %shr436\l  %xor438 = xor i32 %xor434, %or437\l  %xor439 = xor i32 %F.11128, %E.11127\l  %and440 = and i32 %add407, %xor439\l  %xor441 = xor i32 %and440, %F.11128\l  %arrayidx443 = getelementptr inbounds i32, i32* %k.pn, i32 17\l  %manupa39 = load i32, i32* %arrayidx443, align 4, !tbaa !6\l  %shl462 = shl i32 %add5501153, 25\l  %shr464 = lshr i32 %add5501153, 7\l  %or465 = or i32 %shl462, %shr464\l  %shl467 = shl i32 %add5501153, 14\l  %shr469 = lshr i32 %add5501153, 18\l  %or470 = or i32 %shl467, %shr469\l  %shr473 = lshr i32 %add5501153, 3\l  %xor471 = xor i32 %or470, %shr473\l  %xor474 = xor i32 %xor471, %or465\l  %add460 = add i32 %manupa16, %add4771152\l  %add475 = add i32 %add460, %xor458\l  %add477 = add i32 %add475, %xor474\l  %add442 = add i32 %manupa39, %G.11129\l  %add444 = add i32 %add442, %xor441\l  %add478 = add i32 %add444, %add477\l  %add479 = add i32 %add478, %xor438\l  %add480 = add i32 %add479, %C.11125\l  %shl481 = shl i32 %add424, 30\l  %shr482 = lshr i32 %add424, 2\l  %or483 = or i32 %shl481, %shr482\l  %shl484 = shl i32 %add424, 19\l  %shr485 = lshr i32 %add424, 13\l  %or486 = or i32 %shl484, %shr485\l  %xor487 = xor i32 %or483, %or486\l  %shl488 = shl i32 %add424, 10\l  %shr489 = lshr i32 %add424, 22\l  %or490 = or i32 %shl488, %shr489\l  %xor491 = xor i32 %xor487, %or490\l  %and492 = and i32 %add424, %A.11123\l  %xor493 = xor i32 %add424, %A.11123\l  %and494 = and i32 %xor493, %B.11124\l  %xor495 = xor i32 %and494, %and492\l  %add496 = add i32 %xor491, %xor495\l  %add497 = add i32 %add496, %add479\l  %shl501 = shl i32 %add480, 26\l  %shr502 = lshr i32 %add480, 6\l  %or503 = or i32 %shl501, %shr502\l  %shl504 = shl i32 %add480, 21\l  %shr505 = lshr i32 %add480, 11\l  %or506 = or i32 %shl504, %shr505\l  %xor507 = xor i32 %or503, %or506\l  %shl508 = shl i32 %add480, 7\l  %shr509 = lshr i32 %add480, 25\l  %or510 = or i32 %shl508, %shr509\l  %xor511 = xor i32 %xor507, %or510\l  %xor512 = xor i32 %add407, %E.11127\l  %and513 = and i32 %add480, %xor512\l  %xor514 = xor i32 %and513, %E.11127\l  %arrayidx516 = getelementptr inbounds i32, i32* %k.pn, i32 18\l  %manupa40 = load i32, i32* %arrayidx516, align 4, !tbaa !6\l  %shl519 = shl i32 %add404, 15\l  %shr521 = lshr i32 %add404, 17\l  %or522 = or i32 %shl519, %shr521\l  %shl524 = shl i32 %add404, 13\l  %shr526 = lshr i32 %add404, 19\l  %or527 = or i32 %shl524, %shr526\l  %shr530 = lshr i32 %add404, 10\l  %xor528 = xor i32 %or527, %shr530\l  %xor531 = xor i32 %xor528, %or522\l  %shl535 = shl i32 %add6231154, 25\l  %shr537 = lshr i32 %add6231154, 7\l  %or538 = or i32 %shl535, %shr537\l  %shl540 = shl i32 %add6231154, 14\l  %shr542 = lshr i32 %add6231154, 18\l  %or543 = or i32 %shl540, %shr542\l  %shr546 = lshr i32 %add6231154, 3\l  %xor544 = xor i32 %or543, %shr546\l  %xor547 = xor i32 %xor544, %or538\l  %add533 = add i32 %manupa17, %add5501153\l  %add548 = add i32 %add533, %xor531\l  %add550 = add i32 %add548, %xor547\l  %add515 = add i32 %manupa40, %F.11128\l  %add517 = add i32 %add515, %add550\l  %add551 = add i32 %add517, %xor514\l  %add552 = add i32 %add551, %xor511\l  %add553 = add i32 %add552, %B.11124\l  %shl554 = shl i32 %add497, 30\l  %shr555 = lshr i32 %add497, 2\l  %or556 = or i32 %shl554, %shr555\l  %shl557 = shl i32 %add497, 19\l  %shr558 = lshr i32 %add497, 13\l  %or559 = or i32 %shl557, %shr558\l  %xor560 = xor i32 %or556, %or559\l  %shl561 = shl i32 %add497, 10\l  %shr562 = lshr i32 %add497, 22\l  %or563 = or i32 %shl561, %shr562\l  %xor564 = xor i32 %xor560, %or563\l  %and565 = and i32 %add497, %add424\l  %xor566 = xor i32 %add497, %add424\l  %and567 = and i32 %xor566, %A.11123\l  %xor568 = xor i32 %and567, %and565\l  %add569 = add i32 %xor564, %xor568\l  %add570 = add i32 %add569, %add552\l  %shl574 = shl i32 %add553, 26\l  %shr575 = lshr i32 %add553, 6\l  %or576 = or i32 %shl574, %shr575\l  %shl577 = shl i32 %add553, 21\l  %shr578 = lshr i32 %add553, 11\l  %or579 = or i32 %shl577, %shr578\l  %xor580 = xor i32 %or576, %or579\l  %shl581 = shl i32 %add553, 7\l  %shr582 = lshr i32 %add553, 25\l  %or583 = or i32 %shl581, %shr582\l  %xor584 = xor i32 %xor580, %or583\l  %xor585 = xor i32 %add480, %add407\l  %and586 = and i32 %add553, %xor585\l  %xor587 = xor i32 %and586, %add407\l  %arrayidx589 = getelementptr inbounds i32, i32* %k.pn, i32 19\l  %manupa41 = load i32, i32* %arrayidx589, align 4, !tbaa !6\l  %shl592 = shl i32 %add477, 15\l  %shr594 = lshr i32 %add477, 17\l  %or595 = or i32 %shl592, %shr594\l  %shl597 = shl i32 %add477, 13\l  %shr599 = lshr i32 %add477, 19\l  %or600 = or i32 %shl597, %shr599\l  %shr603 = lshr i32 %add477, 10\l  %xor601 = xor i32 %or600, %shr603\l  %xor604 = xor i32 %xor601, %or595\l  %shl608 = shl i32 %add6961155, 25\l  %shr610 = lshr i32 %add6961155, 7\l  %or611 = or i32 %shl608, %shr610\l  %shl613 = shl i32 %add6961155, 14\l  %shr615 = lshr i32 %add6961155, 18\l  %or616 = or i32 %shl613, %shr615\l  %shr619 = lshr i32 %add6961155, 3\l  %xor617 = xor i32 %or616, %shr619\l  %xor620 = xor i32 %xor617, %or611\l  %add606 = add i32 %manupa18, %add6231154\l  %add621 = add i32 %add606, %xor604\l  %add623 = add i32 %add621, %xor620\l  %add588 = add i32 %manupa41, %E.11127\l  %add590 = add i32 %add588, %add623\l  %add624 = add i32 %add590, %xor587\l  %add625 = add i32 %add624, %xor584\l  %add626 = add i32 %add625, %A.11123\l  %shl627 = shl i32 %add570, 30\l  %shr628 = lshr i32 %add570, 2\l  %or629 = or i32 %shl627, %shr628\l  %shl630 = shl i32 %add570, 19\l  %shr631 = lshr i32 %add570, 13\l  %or632 = or i32 %shl630, %shr631\l  %xor633 = xor i32 %or629, %or632\l  %shl634 = shl i32 %add570, 10\l  %shr635 = lshr i32 %add570, 22\l  %or636 = or i32 %shl634, %shr635\l  %xor637 = xor i32 %xor633, %or636\l  %and638 = and i32 %add570, %add497\l  %xor639 = xor i32 %add570, %add497\l  %and640 = and i32 %xor639, %add424\l  %xor641 = xor i32 %and640, %and638\l  %add642 = add i32 %xor637, %xor641\l  %add643 = add i32 %add642, %add625\l  %shl647 = shl i32 %add626, 26\l  %shr648 = lshr i32 %add626, 6\l  %or649 = or i32 %shl647, %shr648\l  %shl650 = shl i32 %add626, 21\l  %shr651 = lshr i32 %add626, 11\l  %or652 = or i32 %shl650, %shr651\l  %xor653 = xor i32 %or649, %or652\l  %shl654 = shl i32 %add626, 7\l  %shr655 = lshr i32 %add626, 25\l  %or656 = or i32 %shl654, %shr655\l  %xor657 = xor i32 %xor653, %or656\l  %xor658 = xor i32 %add553, %add480\l  %and659 = and i32 %add626, %xor658\l  %xor660 = xor i32 %and659, %add480\l  %arrayidx662 = getelementptr inbounds i32, i32* %k.pn, i32 20\l  %manupa42 = load i32, i32* %arrayidx662, align 4, !tbaa !6\l  %shl665 = shl i32 %add550, 15\l  %shr667 = lshr i32 %add550, 17\l  %or668 = or i32 %shl665, %shr667\l  %shl670 = shl i32 %add550, 13\l  %shr672 = lshr i32 %add550, 19\l  %or673 = or i32 %shl670, %shr672\l  %shr676 = lshr i32 %add550, 10\l  %xor674 = xor i32 %or673, %shr676\l  %xor677 = xor i32 %xor674, %or668\l  %add679 = add i32 %manupa19, %add6961155\l  %add694 = add i32 %add679, %xor677\l  %add696 = add i32 %add694, %xor693\l  %add661 = add i32 %manupa42, %add407\l  %add663 = add i32 %add661, %add696\l  %add697 = add i32 %add663, %xor660\l  %add698 = add i32 %add697, %xor657\l  %add699 = add i32 %add698, %add424\l  %shl700 = shl i32 %add643, 30\l  %shr701 = lshr i32 %add643, 2\l  %or702 = or i32 %shl700, %shr701\l  %shl703 = shl i32 %add643, 19\l  %shr704 = lshr i32 %add643, 13\l  %or705 = or i32 %shl703, %shr704\l  %xor706 = xor i32 %or702, %or705\l  %shl707 = shl i32 %add643, 10\l  %shr708 = lshr i32 %add643, 22\l  %or709 = or i32 %shl707, %shr708\l  %xor710 = xor i32 %xor706, %or709\l  %and711 = and i32 %add643, %add570\l  %xor712 = xor i32 %add643, %add570\l  %and713 = and i32 %xor712, %add497\l  %xor714 = xor i32 %and713, %and711\l  %add715 = add i32 %xor710, %xor714\l  %add716 = add i32 %add715, %add698\l  %add720 = add nuw nsw i32 %i.21131, 16\l  %cmp351 = icmp ult i32 %i.21131, 48\l  br i1 %cmp351, label %for.body353, label %for.end722\l|{<s0>T|<s1>F}}"];
	Node0x5642b8b61e40:s0 -> Node0x5642b8b61e40;
	Node0x5642b8b61e40:s1 -> Node0x5642b8b61e90;
	Node0x5642b8b61e90 [shape=record,label="{for.end722:                                       \l  %add404.lcssa = phi i32 [ %add404, %for.body353 ]\l  %add477.lcssa = phi i32 [ %add477, %for.body353 ]\l  %add480.lcssa = phi i32 [ %add480, %for.body353 ]\l  %add497.lcssa = phi i32 [ %add497, %for.body353 ]\l  %add550.lcssa = phi i32 [ %add550, %for.body353 ]\l  %add553.lcssa = phi i32 [ %add553, %for.body353 ]\l  %add570.lcssa = phi i32 [ %add570, %for.body353 ]\l  %add623.lcssa = phi i32 [ %add623, %for.body353 ]\l  %add626.lcssa = phi i32 [ %add626, %for.body353 ]\l  %add643.lcssa = phi i32 [ %add643, %for.body353 ]\l  %add696.lcssa = phi i32 [ %add696, %for.body353 ]\l  %add699.lcssa = phi i32 [ %add699, %for.body353 ]\l  %add716.lcssa = phi i32 [ %add716, %for.body353 ]\l  store i32 %add477.lcssa, i32* %arrayidx388, align 4, !tbaa !6\l  store i32 %add404.lcssa, i32* %arraydecay, align 4, !tbaa !6\l  store i32 %add550.lcssa, i32* %arrayidx461, align 4, !tbaa !6\l  store i32 %add623.lcssa, i32* %arrayidx534, align 4, !tbaa !6\l  store i32 %add696.lcssa, i32* %arrayidx607, align 4, !tbaa !6\l  %manupa43 = bitcast i32* %state to \<4 x i32\>*\l  %manupa44 = load \<4 x i32\>, \<4 x i32\>* %manupa43, align 4, !tbaa !6\l  %manupa45 = insertelement \<4 x i32\> undef, i32 %add626.lcssa, i32 0\l  %manupa46 = insertelement \<4 x i32\> %manupa45, i32 %add553.lcssa, i32 1\l  %manupa47 = insertelement \<4 x i32\> %manupa46, i32 %add480.lcssa, i32 2\l  %manupa48 = insertelement \<4 x i32\> %manupa47, i32 %add716.lcssa, i32 3\l  %manupa49 = add \<4 x i32\> %manupa44, %manupa48\l  store \<4 x i32\> %manupa49, \<4 x i32\>* %manupa43, align 4, !tbaa !6\l  %manupa50 = bitcast i32* %arrayidx16 to \<4 x i32\>*\l  %manupa51 = load \<4 x i32\>, \<4 x i32\>* %manupa50, align 4, !tbaa !6\l  %manupa52 = insertelement \<4 x i32\> undef, i32 %add643.lcssa, i32 0\l  %manupa53 = insertelement \<4 x i32\> %manupa52, i32 %add570.lcssa, i32 1\l  %manupa54 = insertelement \<4 x i32\> %manupa53, i32 %add497.lcssa, i32 2\l  %manupa55 = insertelement \<4 x i32\> %manupa54, i32 %add699.lcssa, i32 3\l  %manupa56 = add \<4 x i32\> %manupa51, %manupa55\l  store \<4 x i32\> %manupa56, \<4 x i32\>* %manupa50, align 4, !tbaa !6\l  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %manupa0) #7\l  ret void\l}"];
}
